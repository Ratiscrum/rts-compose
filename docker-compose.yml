version: "3.3"

networks:
  web:
    external: true # traefik network

services:
  api:
    image: "ghcr.io/ratiscrum/rts-api:main"
    restart: always
    networks:
      - web
    environment:
      NODE_ENV: production
      API_PORT: 80
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_PORT: 5432
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      S3_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      S3_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      S3_ENDPOINT: minio:9000
      S3_BUCKETNAME: ${MINIO_BUCKETNAME}
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.api.rule=Host(`api.${URL}`)"
    - "traefik.http.routers.api.tls=true"
    - "traefik.http.routers.api.tls.certresolver=httpsresolver"
    - "traefik.http.routers.api.entrypoints=websecure"
    - "traefik.http.services.api.loadbalancer.server.port=80"
    - "traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginListRegex=(.*?)"
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
  webapp:
    image: "ghcr.io/ratiscrum-v2/rts-app-2022:main"
    restart: always
    networks:
      - web
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.webapp.rule=Host(`${URL}`)"
    - "traefik.http.services.webapp.loadbalancer.server.port=80"
    - "traefik.http.routers.webapp.tls=true"
    - "traefik.http.routers.webapp.tls.certresolver=httpsresolver"
    - "traefik.http.routers.webapp.entrypoints=websecure"
    - "traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginListRegex=(.*?)"
  postgres:
    image: "postgis/postgis:15-3.4"
    restart: always
    networks:
      - web
    volumes:
    - ./postgres-data:/var/lib/postgresql/data
    ports:
    - 5432:5432
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "--dbname=${DB_NAME}", "--host=localhost", "--username=${DB_USER}"]
      timeout: 10s
      retries: 10
  minio:
    image: minio/minio
    networks:
    - web
    volumes:
    - ${MINIO_PATH}:/data
    environment:
    - MINIO_ROOT_USER=${MINIO_ROOT_USER}
    - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    - MINIO_BROWSER_REDIRECT_URL=http://stash.${URL}
    command:
    - server
    - /data
    - --console-address
    - ":9001"
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.minio.service=minio"
    - "traefik.http.routers.minio.rule=Host(`files.${URL}`)"
    - "traefik.http.services.minio.loadbalancer.server.port=9000"
    - "traefik.http.routers.minio.tls=true"
    - "traefik.http.routers.minio.tls.certresolver=httpsresolver"
    - "traefik.http.routers.minio.entrypoints=websecure"
    - "traefik.http.middlewares.cors-headers.headers.accessControlAllowOriginListRegex=(.*?)"
    - "traefik.http.routers.minio-console.service=minio-console"
    - "traefik.http.routers.minio-console.rule=Host(`stash.${URL}`)"
    - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
    - "traefik.http.routers.minio-console.tls=true"
    - "traefik.http.routers.minio-console.tls.certresolver=httpsresolver"
    - "traefik.http.routers.minio-console.entrypoints=websecure"
